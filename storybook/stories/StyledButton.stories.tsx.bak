import React from 'react';
import type { Meta, StoryObj } from '@storybook/react';

// Styled button component using SCSS classes
interface StyledButtonProps {
  children: React.ReactNode;
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  loading?: boolean;
  onClick?: () => void;
}

const StyledButton = ({ children, variant = 'primary', size = 'md', loading = false, ...props }: StyledButtonProps) => {
  const className = `btn btn-${variant} btn-${size}`;
  
  return (
    <button className={className} disabled={loading} {...props}>
      {loading ? <span className="loading"></span> : children}
    </button>
  );
};

const meta: Meta<typeof StyledButton> = {
  title: 'Styled/Button',
  component: StyledButton,
  parameters: {
    layout: 'centered',
  },
  argTypes: {
    variant: {
      control: 'select',
      options: ['primary', 'secondary', 'ghost'],
    },
    size: {
      control: 'select', 
      options: ['sm', 'md', 'lg'],
    },
    loading: {
      control: 'boolean',
    },
  },
};

export default meta;
type Story = StoryObj<typeof meta>;

export const Primary: Story = {
  args: {
    children: 'Primary Button',
    variant: 'primary',
  },
};

export const Secondary: Story = {
  args: {
    children: 'Secondary Button',
    variant: 'secondary',
  },
};

export const Ghost: Story = {
  args: {
    children: 'Ghost Button',
    variant: 'ghost',
  },
};

export const Loading: Story = {
  args: {
    children: 'Loading...',
    variant: 'primary',
    loading: true,
  },
};

export const Small: Story = {
  args: {
    children: 'Small Button',
    size: 'sm',
  },
};

export const Large: Story = {
  args: {
    children: 'Large Button',
    size: 'lg',
  },
};

export const AllVariants: Story = {
  render: () => (
    <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', alignItems: 'center' }}>
      <StyledButton variant="primary">Primary</StyledButton>
      <StyledButton variant="secondary">Secondary</StyledButton>
      <StyledButton variant="ghost">Ghost</StyledButton>
    </div>
  ),
};

export const AllSizes: Story = {
  render: () => (
    <div style={{ display: 'flex', gap: '12px', alignItems: 'center' }}>
      <StyledButton size="sm">Small</StyledButton>
      <StyledButton size="md">Medium</StyledButton>
      <StyledButton size="lg">Large</StyledButton>
    </div>
  ),
};